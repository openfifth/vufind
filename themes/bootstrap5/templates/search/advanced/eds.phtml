<?php if (!empty($this->expanderList)): ?>
  <fieldset class="eds">
    <legend><?=$this->transEsc('eds_modes_and_expanders')?></legend>
    <?php foreach ($this->expanderList as $field => $expander):
      $value = $expander['Value'] ?>
      <div class="checkbox">
        <label for="expand_<?=$this->escapeHtmlAttr(str_replace(' ', '+', $field))?>">
          <input id="expand_<?=$this->escapeHtmlAttr(str_replace(' ', '+', $field))?>" type="checkbox" <?=(isset($expander['selected']) && $expander['selected']) ? 'checked="checked" data-checked-by-default="true"' : ''?> name="filter[]" value="EXPAND:<?=$this->escapeHtmlAttr($value)?>">
          <?=$this->transEsc('eds_expander_' . $value, [], $expander['Label'])?>
        </label>
      </div>
    <?php endforeach; ?>

    <label for="searchModes"><?=$this->transEsc('Search Mode')?></label>
    <select id="searchMode_<?=$this->escapeHtmlAttr($field)?>" name="filter[]" class="form-control">
      <?php foreach ($this->searchModes as $field => $searchMode):
        $value = $searchMode['Value'] ?>
        <option <?=(isset($searchMode['selected']) && $searchMode['selected']) ? 'selected="selected"' : ''?> value="SEARCHMODE:<?=$this->escapeHtmlAttr($value)?>">
          <?= /* 'Label' comes from API and is always in English; try to translate structured value before using it: */ $this->transEsc('eds_mode_' . $value, [], $searchMode['Label']) ?>
        </option>
      <?php endforeach; ?>
    </select>
  </fieldset>
<?php endif; ?>

<?php if (!empty($this->limiterList)): ?>
  <fieldset class="eds">
    <legend><?=$this->transEsc('Limit To')?></legend>
    <?php foreach ($this->limiterList as $field => $facet): ?>
      <?php switch($facet['Type']) {
          case 'multiselectvalue': ?>
            <label for="limit_<?=$this->escapeHtmlAttr(str_replace(' ', '+', $field))?>"><?=$this->transEsc($facet['Label'])?></label><br>
            <select id="limit_<?=$this->escapeHtmlAttr($field)?>" name="filter[]" multiple="multiple" size="10" class="form-control">
              <?php
              // Sort the current facet list alphabetically; we'll use this data
              // along with the foreach below to display facet options in the
              // correct order.
              $sorted = [];
              foreach ($facet['LimiterValues'] as $i => $value) {
                $sorted[$i] = $value['Value'];
              }
              $this->sorter()->natsort($sorted);
              $lastDisplay = $lastValue = '';
              ?>
              <?php foreach ($sorted as $i => $display): ?>
                <?php
                  $facetValue = $facet['LimiterValues'][$i];
                  // Filter out duplicate values:
                  if ($lastDisplay === $display && $lastValue === $facetValue) {
                    continue;
                  }
                  $lastDisplay = $display;
                  $lastValue = $facetValue;
                ?>
                <option value="<?='~LIMIT|' . $this->escapeHtmlAttr($field . ':' . $facetValue['Value'])?>"<?=(isset($facetValue['selected']) && $facetValue['selected']) ? ' selected="selected"' : ''?>><?=$this->escapeHtml($facetValue['Value'])?></option>
              <?php endforeach; ?>
            </select>
            <!-- <br> -->
            <?php break;
          case 'select':
            $value = $facet['LimiterValues'][0]['Value'] ?>
            <div class="checkbox">
              <label for="limit_<?=$this->escapeHtmlAttr(str_replace(' ', '+', $field))?>">
                <input id="limit_<?=$this->escapeHtmlAttr(str_replace(' ', '+', $field))?>" type="checkbox" <?=(isset($facet['LimiterValues'][0]['selected']) && $facet['LimiterValues'][0]['selected']) ? 'checked="checked" data-checked-by-default="true"' : ''?> name="filter[]" value="<?=$this->escapeHtmlAttr('LIMIT|' . $field . ':' . $value)?>">
                <?=$this->transEsc($facet['Label'])?>
              </label>
            </div>
            <?php break;
          case 'text': ?>
            <!-- not implemented -->
            <?php break;
          case 'numeric':?>
            <!-- not implemented -->
            <?php break;
          case 'numericrange':?>
            <!-- not implemented -->
            <?php break;
          case 'ymrange': ?>
            <!-- not implemented -->
            <?php break;
          case 'yrange': ?>
            <!-- not implemented -->
            <?php break;
          case 'historicalrange':?>
            <!-- not implemented -->
            <?php break;
          case 'singleselectvalue':?>
            <!-- not implemented -->
            <?php break;
        } ?>
    <?php endforeach; ?>
  </fieldset>
<?php endif; ?>
<?php if (isset($this->dateRangeLimit)): ?>
  <fieldset class="eds">
    <legend><?=$this->transEsc('adv_search_year')?></legend>
    <input type="hidden" name="daterange[]" value="PublicationDate">
    <div class="date-fields">
      <div class="date-from">
        <label for="PublicationDatefrom"><?=$this->transEsc('date_from')?>:</label>
        <input type="number" name="PublicationDatefrom" id="PublicationDatefrom" value="<?=$this->escapeHtmlAttr($this->dateRangeLimit[0])?>" class="form-control" min="-9999" max="9999">
      </div>
      <div class="date-to">
        <label for="PublicationDateto"><?=$this->transEsc('date_to')?>:</label>
        <input type="number" name="PublicationDateto" id="PublicationDateto" value="<?=$this->escapeHtmlAttr($this->dateRangeLimit[1])?>" class="form-control" min="-9999" max="9999">
      </div>
    </div>
    <?php $options = $this->searchOptions($this->searchClassId); ?>
    <?=$this->component('date-range-slider', [
      'values' => $current['values'] ?? [],
      'sliderId' => 'PublicationDateSlider',
      'inputMinId' => 'PublicationDatefrom',
      'inputMaxId' => 'PublicationDateto',
      'rangeMin' => $options->getDateRangeSliderMinValue('PublicationDate'),
      'rangeMax' => $options->getDateRangeSliderMaxValue('PublicationDate'),
    ])?>
  </fieldset>
<?php endif; ?>
